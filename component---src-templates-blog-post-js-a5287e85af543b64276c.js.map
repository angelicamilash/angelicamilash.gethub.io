{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","src_components_navbar__WEBPACK_IMPORTED_MODULE_3__","src_images_favicon_png__WEBPACK_IMPORTED_MODULE_4__","src_images_favicon_png__WEBPACK_IMPORTED_MODULE_4___default","Wrapper","styled","div","withConfig","displayName","componentId","Header","h1","Subheader","Frame","iframe","ComingSoonText","_ref","post","data","markdownRemark","console","log","a","createElement","Fragment","charSet","name","content","rel","type","href","Favicon","sizes","isDetailedPage","frontmatter","videoURL","src","frameborder","allowfullscreen","title","subtitle","credits","map","credit"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAAO,EAAAI,GAQME,EAAUC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAGJ,CAAH,sJAUPK,EAASL,IAAOM,GAAVJ,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAGJ,CAAH,mEAONO,EAAYP,YAAOK,GAAVH,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAGJ,CAAH,uEAOTQ,EAAQR,IAAOS,OAAVP,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAGJ,CAAH,6BAKLU,EAAiBV,IAAOM,GAAVJ,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAGJ,CAAH,2FAQLZ,EAAA,iBAAAuB,GAAc,IACrBC,EADqBD,EAAXE,KACEC,eAElB,OADAC,QAAQC,IAAIJ,GAEVpB,EAAAyB,EAAAC,cAAA1B,EAAAyB,EAAAE,SAAA,KACE3B,EAAAyB,EAAAC,cAACxB,EAAA,OAAD,KACEF,EAAAyB,EAAAC,cAAA,QAAME,QAAQ,UACd5B,EAAAyB,EAAAC,cAAA,+BACA1B,EAAAyB,EAAAC,cAAA,QACEG,KAAK,cACLC,QAAQ,iGAEV9B,EAAAyB,EAAAC,cAAA,QAAMK,IAAI,OAAOC,KAAK,YAAYC,KAAMC,IAASC,MAAM,WAEzDnC,EAAAyB,EAAAC,cAACtB,EAAA,EAAD,CAAQgC,gBAAc,IACtBpC,EAAAyB,EAAAC,cAACnB,EAAD,KACGa,EAAKiB,YAAYC,SAChBtC,EAAAyB,EAAAC,cAACV,EAAD,CACEuB,IAAG,iCAAmCnB,EAAKiB,YAAYC,SACvDE,YAAY,IACZC,iBAAe,IAGjBzC,EAAAyB,EAAAC,cAACR,EAAD,oBAEFlB,EAAAyB,EAAAC,cAACb,EAAD,KAASO,EAAKiB,YAAYK,OAC1B1C,EAAAyB,EAAAC,cAACX,EAAD,KAAYK,EAAKiB,YAAYM,UAC5BvB,EAAKiB,YAAYO,QAAQC,IAAI,SAAAC,GAAM,OAClC9C,EAAAyB,EAAAC,cAACX,EAAD,KAAY+B,QAOf,IAAMhD,EAAK","file":"component---src-templates-blog-post-js-a5287e85af543b64276c.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\nimport { graphql } from \"gatsby\";\n\nimport Navbar from \"src/components/navbar\";\nimport Favicon from \"src/images/favicon.png\";\n\nconst Wrapper = styled.div`\n  font-family: \"D-DIN\", sans-serif;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: black;\n`;\n\nconst Header = styled.h1`\n  color: white;\n  font-size: 22px;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nconst Subheader = styled(Header)`\n  font-size: 16px;\n  margin-bottom: 0;\n  margin-top: 10px;\n  text-align: center;\n`;\n\nconst Frame = styled.iframe`\n  width: 50vw;\n  height: 30vw;\n`;\n\nconst ComingSoonText = styled.h1`\n  color: #000;\n  padding: 100px 75px;\n  text-align: center;\n  background-color: #eee;\n  font-size: 48px;\n`;\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n  console.log(post);\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>angelicamilash</title>\n        <meta\n          name=\"description\"\n          content=\"angelicamilash is an independent director and filmmaker currently based in Toronto, Ontario.\"\n        />\n        <link rel=\"icon\" type=\"image/png\" href={Favicon} sizes=\"16x16\" />\n      </Helmet>\n      <Navbar isDetailedPage />\n      <Wrapper>\n        {post.frontmatter.videoURL ? (\n          <Frame\n            src={`https://www.youtube.com/embed/${post.frontmatter.videoURL}`}\n            frameborder=\"0\"\n            allowfullscreen\n          ></Frame>\n        ) : (\n          <ComingSoonText>COMING SOON</ComingSoonText>\n        )}\n        <Header>{post.frontmatter.title}</Header>\n        <Subheader>{post.frontmatter.subtitle}</Subheader>\n        {post.frontmatter.credits.map(credit => (\n          <Subheader>{credit}</Subheader>\n        ))}\n      </Wrapper>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        videoURL\n        credits\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}